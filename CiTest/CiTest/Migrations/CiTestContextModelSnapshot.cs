// <auto-generated />
using System;
using CiTest.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CiTest.Migrations
{
    [DbContext(typeof(CiTestContext))]
    partial class CiTestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CiTest.Entities.DatabaseEntities.Contract", b =>
                {
                    b.Property<string>("ContractCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CurrentBalanceCurrency")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAccountOpenedField")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfLastPaymentField")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InstallmentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InstallmentAmountCurrency")
                        .HasColumnType("int");

                    b.Property<DateTime>("NextPaymentDateField")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OriginalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OriginalAmountCurrency")
                        .HasColumnType("int");

                    b.Property<decimal>("OverdueBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OverdueBalanceCurrency")
                        .HasColumnType("int");

                    b.Property<int>("PhaseOfContractField")
                        .HasColumnType("int");

                    b.Property<DateTime>("RealEndDateField")
                        .HasColumnType("datetime2");

                    b.HasKey("ContractCode");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("CiTest.Entities.DatabaseEntities.Individual", b =>
                {
                    b.Property<string>("CustomerCodeField")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContractCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateOfBirthField")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstNameField")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderField")
                        .HasColumnType("int");

                    b.Property<string>("LastNameField")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerCodeField");

                    b.HasIndex("ContractCode");

                    b.ToTable("Individuals");
                });

            modelBuilder.Entity("CiTest.Entities.DatabaseEntities.Individual", b =>
                {
                    b.HasOne("CiTest.Entities.DatabaseEntities.Contract", null)
                        .WithMany("Individuals")
                        .HasForeignKey("ContractCode");
                });
#pragma warning restore 612, 618
        }
    }
}
